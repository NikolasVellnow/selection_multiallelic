function cost=CostFn(w,X)
% Calculates the cost using a squared euclidean norm
% Input X is a trajectory (eg from data) and is of size n*(T+1)
% v=[0;w] is the vector that parameterises the A fitness matrix
% w is of size n(n+1)/2-1.

T=size(X,2)-1;

v=[0;w];                % Always have first element of v zero
A=SMatVec(v);           % The A matrix generated by v.

S=0;
for t=1:T
    x=X(:,t);
    xp=X(:,t+1);
    V=diag(x)-x*x';
    D=V*A*x/(1+x'*A*x);
    Y=x+D;
    current_diff= xp-Y;
    current_norm=norm(current_diff);
    S=S+current_norm^2;
end
cost = S;
end